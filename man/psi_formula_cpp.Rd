% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{psi_formula_cpp}
\alias{psi_formula_cpp}
\title{(C++) Computation of the Psi Dissimilarity Score}
\usage{
psi_formula_cpp(cost_path_sum, auto_sum, diagonal = TRUE)
}
\arguments{
\item{cost_path_sum}{(required, numeric) output of \code{\link[=cost_path_sum_cpp]{cost_path_sum_cpp()}} on a least cost path.}

\item{auto_sum}{(required, numeric) auto sum of both sequences,
result of \code{\link[=auto_sum_cpp]{auto_sum_cpp()}}.}

\item{diagonal}{(optional, logical). If TRUE, diagonals are included in the
computation of the cost matrix. Default: FALSE.}
}
\value{
numeric
}
\description{
Computes the psi dissimilarity score between two time series from
their least cost path sum and their auto sums.
}
\seealso{
Other Rcpp: 
\code{\link{auto_distance_cpp}()},
\code{\link{auto_sum_cpp}()},
\code{\link{auto_sum_full_cpp}()},
\code{\link{auto_sum_path_cpp}()},
\code{\link{cost_matrix_cpp}()},
\code{\link{cost_matrix_diag_cpp}()},
\code{\link{cost_matrix_weighted_diag_cpp}()},
\code{\link{cost_path_cpp}()},
\code{\link{cost_path_diagonal_cpp}()},
\code{\link{cost_path_orthogonal_cpp}()},
\code{\link{cost_path_slotting_cpp}()},
\code{\link{cost_path_sum_cpp}()},
\code{\link{cost_path_trim_cpp}()},
\code{\link{distance_canberra_cpp}()},
\code{\link{distance_chebyshev_cpp}()},
\code{\link{distance_chi_cpp}()},
\code{\link{distance_cosine_cpp}()},
\code{\link{distance_euclidean_cpp}()},
\code{\link{distance_hamming_cpp}()},
\code{\link{distance_hellinger_cpp}()},
\code{\link{distance_jaccard_cpp}()},
\code{\link{distance_lock_step_cpp}()},
\code{\link{distance_manhattan_cpp}()},
\code{\link{distance_matrix_cpp}()},
\code{\link{distance_russelrao_cpp}()},
\code{\link{importance_legacy_cpp}()},
\code{\link{importance_lock_step_cpp}()},
\code{\link{importance_robust_cpp}()},
\code{\link{null_psi_cpp}()},
\code{\link{null_psi_lock_step_cpp}()},
\code{\link{permute_free_by_row_cpp}()},
\code{\link{permute_free_cpp}()},
\code{\link{permute_restricted_by_row_cpp}()},
\code{\link{permute_restricted_cpp}()},
\code{\link{psi_cpp}()},
\code{\link{psi_lock_step_cpp}()},
\code{\link{subset_matrix_by_rows_cpp}()}
}
\concept{Rcpp}
