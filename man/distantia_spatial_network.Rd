% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distantia_spatial_network.R
\name{distantia_spatial_network}
\alias{distantia_spatial_network}
\title{Convert Dissimilarity Analysis Data Frames to Spatial Dissimilarity Networks}
\usage{
distantia_spatial_network(df = NULL, sf = NULL)
}
\arguments{
\item{df}{(required, data frame) Output of \code{\link[=distantia]{distantia()}} or \code{\link[=distantia_aggregate]{distantia_aggregate()}}. Default: NULL}

\item{sf}{(required, sf POINT data frame) Sf data frame with the coordinates of the time series in argument 'df'. It must have a column with all time series names in \code{df$x} and \code{df$y}. See \verb{[eemian_cooordinaes]} example. Default: NULL}
}
\value{
sf data frame (LINESTRING geometry)
}
\description{
Given an sf data frame with the coordinates of a time series list transforms a data frame resulting from \code{\link[=distantia]{distantia()}} to an sf data frame with lines connecting the time series locations. This can be used to visualize a geographic network of similarity/dissimilarity between locations. See example for further details.
}
\examples{
#three time series
#climate and ndvi in Fagus sylvatica stands in Spain, Germany, and Sweden
data("fagus_dynamics")
data("fagus_coordinates")

#load as tsl
#center and scale with same parameters
tsl <- tsl_initialize(
  x = fagus_dynamics,
  name_column = "name",
  time_column = "time"
) |>
  tsl_transform(
    f = f_scale_global
  )

#example using distantia()
#--------------------------------------------------
distantia_df <- distantia(
  tsl = tsl
)

#transform to sf
distantia_sf <- distantia::distantia_spatial_network(
  df = distantia_df,
  sf = fagus_coordinates
)

#mapping with tmap
# library(tmap)
# tmap::tmap_mode("view")
#
# tmap::tm_shape(distantia_sf) +
#   tmap::tm_lines(
#     col = "psi",
#     lwd = 3
#   ) +
#   tmap::tm_shape(fagus_coordinates) +
#   tmap::tm_dots(size = 0.1, col = "gray50")


#example using momentum()
#--------------------------------------------------
importance_df <- momentum(
  tsl = tsl
)

#transform to sf
importance_sf <- distantia::distantia_spatial_network(
  df = importance_df,
  sf = fagus_coordinates
)

names(importance_sf)

# #map contribution to dissimilarity of evi
# #negative: contributes to similarity
# #positive: contributes to dissimilarity
# tmap::tm_shape(importance_sf) +
#   tmap::tm_lines(
#     col = "importance__evi",
#     lwd = 3,
#     midpoint = NA
#   ) +
#   tmap::tm_shape(fagus_coordinates) +
#   tmap::tm_dots(size = 0.1, col = "gray50")
#
# #map variables making sites more similar
# tmap::tm_shape(importance_sf) +
#   tmap::tm_lines(
#     col = "most_similar",
#     lwd = 3
#   ) +
#   tmap::tm_shape(fagus_coordinates) +
#   tmap::tm_dots(size = 0.1, col = "gray50")
#
# #map variables making sites less similar
# tmap::tm_shape(importance_sf) +
#   tmap::tm_lines(
#     col = "most_dissimilar",
#     lwd = 3
#   ) +
#   tmap::tm_shape(fagus_coordinates) +
#   tmap::tm_dots(size = 0.1, col = "gray50")
}
\seealso{
Other dissimilarity_analysis: 
\code{\link{distantia_aggregate}()},
\code{\link{distantia_boxplot}()},
\code{\link{distantia_cluster_hclust}()},
\code{\link{distantia_cluster_kmeans}()},
\code{\link{distantia_matrix}()},
\code{\link{distantia_plot}()},
\code{\link{distantia_stats}()},
\code{\link{distantia_time_shift}()},
\code{\link{momentum_boxplot}()},
\code{\link{momentum_stats}()},
\code{\link{momentum_to_wide}()}
}
\concept{dissimilarity_analysis}
