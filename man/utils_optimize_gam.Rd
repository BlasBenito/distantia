% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_optimize_gam.R
\name{utils_optimize_gam}
\alias{utils_optimize_gam}
\title{Optimization of Univariate GAM Models}
\usage{
utils_optimize_gam(x = NULL, y = NULL, max_complexity = FALSE)
}
\arguments{
\item{x}{(required, numeric vector) predictor, a time vector coerced to numeric. Default: NULL}

\item{y}{(required, numeric vector) response, a column of a zoo object. Default: NULL}

\item{max_complexity}{(required, logical). If TRUE, RMSE optimization is ignored, and the model of maximum complexity is returned. Default: FALSE}
}
\value{
GAM model.
}
\description{
Internal function used in \code{\link[=zoo_resample]{zoo_resample()}}. It finds the optimal \code{k} parameter of a univariate GAM formula \verb{y ~ s(x, k = ?)} fitted with \code{\link[mgcv:gam]{mgcv::gam()}} that minimizes the root mean squared error (rmse) between observations and predictions, and returns a model fitted with such \code{k}.
}
\examples{

#zoo time series
xy <- zoo_simulate(
  cols = 1,
  rows = 30
)

#optimize gam model
m <- utils_optimize_gam(
  x = as.numeric(zoo::index(xy)), #predictor
  y = xy[, 1] #response
)

print(m)

#plot observation
plot(
  x = zoo::index(xy),
  y = xy[, 1],
  col = "forestgreen",
  type = "l",
  lwd = 2
)

#plot prediction
points(
  x = zoo::index(xy),
  y = stats::predict(
    object = m,
    type = "response"
    ),
  col = "red"
)

}
