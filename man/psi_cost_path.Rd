% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psi_cost_path.R
\name{psi_cost_path}
\alias{psi_cost_path}
\title{Least Cost Path}
\usage{
psi_cost_path(dist_matrix = NULL, cost_matrix = NULL, diagonal = TRUE)
}
\arguments{
\item{dist_matrix}{(required, numeric matrix) Distance matrix generated by \code{\link[=psi_distance_matrix]{psi_distance_matrix()}}. Default: NULL}

\item{cost_matrix}{(required, numeric matrix) Cost matrix generated from the distance matrix with \code{\link[=psi_cost_matrix]{psi_cost_matrix()}}. Default: NULL}

\item{diagonal}{(optional, logical) If TRUE, diagonals are used during the least-cost path search. Default: TRUE}
}
\value{
data frame
}
\description{
Demonstration function to compute the least cost path within a least cost matrix.
}
\examples{
#simulate two time series
tsl <- tsl_simulate(
  n = 2,
  seed = 1
)

if(interactive()){
  tsl_plot(tsl = tsl)
}

#distance matrix
dist_matrix <- psi_distance_matrix(
  x = tsl[[1]],
  y = tsl[[2]],
  distance = "euclidean"
)

#cost matrix
cost_matrix <- psi_cost_matrix(
  dist_matrix = dist_matrix,
  diagonal = FALSE
)

#diagonal least cost path
#------------------------
cost_path <- psi_cost_path(
  dist_matrix = dist_matrix,
  cost_matrix = cost_matrix
)

if(interactive()){
  utils_matrix_plot(
    m = cost_matrix,
    path = cost_path
    )
}


#orthogonal least cost path
#--------------------------
cost_path <- psi_cost_path(
  dist_matrix = dist_matrix,
  cost_matrix = cost_matrix,
  diagonal = FALSE
)

if(interactive()){
  utils_matrix_plot(
    m = cost_matrix,
    path = cost_path
  )
}
}
\seealso{
Other psi_demo: 
\code{\link{distance}()},
\code{\link{distances}},
\code{\link{psi_auto_distance}()},
\code{\link{psi_auto_sum}()},
\code{\link{psi_cost_matrix}()},
\code{\link{psi_cost_path_ignore_blocks}()},
\code{\link{psi_cost_path_sum}()},
\code{\link{psi_distance_lock_step}()},
\code{\link{psi_distance_matrix}()},
\code{\link{psi_equation}()}
}
\concept{psi_demo}
