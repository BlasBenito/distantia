% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psi_cost_path.R
\name{psi_cost_path}
\alias{psi_cost_path}
\title{Least Cost Path}
\usage{
psi_cost_path(dist_matrix = NULL, cost_matrix = NULL, diagonal = TRUE)
}
\arguments{
\item{dist_matrix}{(required, numeric matrix) Distance matrix.}

\item{cost_matrix}{(required, numeric matrix) Cost matrix generated from the distance matrix.}

\item{diagonal}{(optional, logical) If TRUE, diagonals are used during the least-cost path search. Default: TRUE}
}
\value{
A data frame with least-cost path coordiantes.
}
\description{
Least Cost Path
}
\examples{
#simulate two time series
tsl <- tsl_simulate(
  n = 2
)

if(interactive()){
  tsl_plot(tsl = tsl)
}

#step by step computation of psi

#common distance method
dist_method <- "euclidean"

#distance matrix
d <- psi_dist_matrix(
  x = tsl[[1]],
  y = tsl[[2]],
  distance = dist_method
)

if(interactive()){
  utils_matrix_plot(m = d)
}

#cost matrix
m <- psi_cost_matrix(
  dist_matrix = d
)

if(interactive()){
  utils_matrix_plot(m = m)
}

#least cost path
path <- psi_cost_path(
  dist_matrix = d,
  cost_matrix = m
)

if(interactive()){
  utils_matrix_plot(
    m = m,
    path = path
    )
}

#sum of least cost path
path_sum <- psi_cost_path_sum(path = path)

#auto sum of the time series
xy_sum <- psi_auto_sum(
  x = tsl[[1]],
  y = tsl[[2]],
  path = path,
  distance = dist_method
)

#dissimilarity
psi <- psi(
  path_sum = path_sum,
  auto_sum = xy_sum
)

psi

#full computation in one line
distantia(
  tsl = tsl
)$psi

#dissimilarity plot
distantia_plot(
  tsl = tsl
)

}
\seealso{
Other psi_demo: 
\code{\link{psi_auto_distance}()},
\code{\link{psi_auto_sum}()},
\code{\link{psi_cost_matrix}()},
\code{\link{psi_cost_path_sum}()},
\code{\link{psi_cost_path_trim_blocks}()},
\code{\link{psi_dist_matrix}()}
}
\concept{psi_demo}
