% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsl_diagnose.R
\name{tsl_diagnose}
\alias{tsl_diagnose}
\title{Diagnose Issues in Time Series Lists}
\usage{
tsl_diagnose(tsl = NULL, full = TRUE)
}
\arguments{
\item{tsl}{(required, list of zoo time series) Time series list to diagnose. Default: NULL}

\item{full}{(optional, logical) If TRUE, a full diagnostic is triggered. Otherwise, only the data structure is tested. Default: TRUE}
}
\value{
time series list; messages
}
\description{
A Time Series List (\code{tsl} for short) is a named list of zoo time series. This type of object, not defined as a class, is used throughout the \code{distantia} package to contain time series data ready for processing and analysis.

The structure and values of a \code{tsl} must fulfill several general conditions:

Structure:
\itemize{
\item List names match the attributes "name" of the zoo time series.
\item Zoo time series must have at least one shared column name.
\item The index (as extracted by \code{\link[zoo:index]{zoo::index()}}) of all zoo objects must be of the same class (either "Date", "POSIXct", "numeric", or "integer").
\item The "core data" (as extracted by \code{\link[zoo:coredata]{zoo::coredata()}}) of univariate zoo time series must be of class "matrix".
}

Values (optional, when \code{full = TRUE}):
\itemize{
\item All time series have at least one shared numeric column.
\item There are no NA, Inf, or NaN values in the time series.
}

This function analyzes a \code{tsl} without modifying it to returns messages describing what conditions are not met, and provides hints on how to fix most issues.
}
\examples{
#creating three zoo time series with some NA values
x <- zoo_simulate(
  name = "x",
  cols = 1,
  na_fraction = 0.1
  )

y <- zoo_simulate(
  name = "y",
  cols = 1,
  na_fraction = 0.1
  )

z <- zoo_simulate(
  name = "z",
  cols = 1,
  na_fraction = 0.1
  )

#adding a few structural issues

#converting x to vector
x <- zoo::zoo(
  x = runif(nrow(x)),
  order.by = zoo::index(x)
)

#changing the colname of z
colnames(z) <- c("b")

#storing zoo objects in a list
#notice mismatched names with zoo objects
tsl <- list(
  a = x,
  b = y,
  c = z
)

#running full diagnose
tsl <- tsl_diagnose(
  tsl = tsl,
  full = TRUE
  )
}
\seealso{
Other data_preparation: 
\code{\link{tsl_colnames_clean}()},
\code{\link{tsl_colnames_set}()},
\code{\link{tsl_handle_NA}()},
\code{\link{tsl_initialize}()},
\code{\link{tsl_names_clean}()},
\code{\link{tsl_names_set}()},
\code{\link{tsl_repair}()},
\code{\link{tsl_time_class_set}()},
\code{\link{zoo_name_get}()},
\code{\link{zoo_name_set}()},
\code{\link{zoo_to_tsl}()},
\code{\link{zoo_vector_to_matrix}()}
}
\concept{data_preparation}
