% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsl_diagnose.R
\name{tsl_diagnose}
\alias{tsl_diagnose}
\title{Diagnose Issues in Time Series Lists}
\usage{
tsl_diagnose(tsl = NULL, full = TRUE)
}
\arguments{
\item{tsl}{(required, list of zoo time series) Time series list to diagnose. Default: NULL}

\item{full}{(optional, logical) If TRUE, the function also checks all individual values. Default: TRUE}
}
\value{
time series list, and messages describing detected issues
}
\description{
A Time Series List (\code{tsl} for short) is a list of zoo time series. This type of object, not defined as a class, is used throughout the \code{distantia} package to handle time series processing and analysis. The structure and values of \code{tsl} must fulfill several conditions:

Structure:
\itemize{
\item Argument \code{tsl} is a named list of zoo time series
\item The list names match the attributes "name" of the zoo time series
\item All zoo time series must have at least one shared column name.
\item Data in univariate zoo time series (as extracted by \code{zoo::coredata(x)}) must be of the class "matrix". Univariate zoo time series are often represented as vectors, but this breaks several subsetting and transformation operations implemented in this package.
}

Values (optional):
\itemize{
\item All time series have at least one shared numeric column.
\item There are no NA, Inf, or NaN values in the time series.
}

This function analyzes a \code{tsl} to returns messages describing what conditions are not met, and provides hints on how to fix most issues.
}
\examples{
#creating three zoo time series with some NA values
x <- zoo_simulate(
  name = "x",
  cols = 1,
  na_fraction = 0.1
  )

y <- zoo_simulate(
  name = "y",
  cols = 1,
  na_fraction = 0.1
  )

z <- zoo_simulate(
  name = "z",
  cols = 1,
  na_fraction = 0.1
  )

#adding a few structural issues

#converting x to vector
x <- zoo::zoo(
  x = runif(nrow(x)),
  order.by = zoo::index(x)
)

#changing the colname of z
colnames(z) <- c("b")

#storing zoo objects in a list
#notice mismatched names with zoo objects
tsl <- list(
  a = x,
  b = y,
  c = z
)

#running full diagnose
tsl <- tsl_diagnose(
  tsl = tsl,
  full = TRUE
  )
}
\seealso{
Other data_preparation: 
\code{\link{tsl_colnames_clean}()},
\code{\link{tsl_colnames_set}()},
\code{\link{tsl_handle_NA}()},
\code{\link{tsl_initialize}()},
\code{\link{tsl_names_clean}()},
\code{\link{tsl_names_set}()},
\code{\link{tsl_repair}()},
\code{\link{zoo_name_get}()},
\code{\link{zoo_name_set}()},
\code{\link{zoo_to_tsl}()}
}
\concept{data_preparation}
