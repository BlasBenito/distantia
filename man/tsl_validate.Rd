% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsl_validate.R
\name{tsl_validate}
\alias{tsl_validate}
\alias{tsl_is_valid}
\title{Validate Time Series List}
\usage{
tsl_validate(tsl = NULL)

tsl_is_valid(tsl = NULL)
}
\arguments{
\item{tsl}{(required, list) Time series list. Default: NULL}
}
\value{
time series list
}
\description{
Validity assessment of Time Series Lists. The required features for a valid time series list are:
\itemize{
\item Argument \code{tsl} is a list.
\item List \code{tsl} has unique names.
\item List \code{tsl} has more than one element.
\item All elements in \code{tsl} are \code{zoo} objects.
\item All \code{zoo} objects have the attribute "name".
\item All \code{zoo} objects have unique values in the attribute "name".
\item Names of the list slots and the \code{zoo} objects are the same.
\item All \code{zoo} objects have at least one shared column name.
\item All columns in the \code{zoo} objects are numeric.
\item All \code{zoo} objects have zero NA cases.
}

The function \code{tsl_validate()} assesses these conditions, and sets the value of the attribute "valid" of the time series list to \code{TRUE} or \code{FALSE} accordingly.

The function \code{tsl_is_valid()}, called by most functions taking a time series list as input, returns a warning if the value of the "valid" argument is FALSE.
}
\examples{
#tsl with NA cases
tsl <- tsl_simulate(
  na_fraction = 0.25
)

#removing list names
names(tsl) <- NULL

#value of attribute "valid"
attributes(x = tsl)$valid

#this will result in an invalid tsl
tsl <- tsl_is_valid(
  tsl = tsl
)

#run validation check
tsl <- tsl_validate(
  tsl = tsl
)
#two issues identified!

#addressing names issue
tsl <- tsl_names_set(
  tsl = tsl
)

#addressing NA issue
tsl <- tsl_handle_NA(
  tsl = tsl
)

#validation test again
tsl <- tsl_validate(
  tsl = tsl
)

#validation check works now
tsl <- tsl_is_valid(
  tsl = tsl
)

#value of attribute "valid" is TRUE
attributes(x = tsl)$valid
}
