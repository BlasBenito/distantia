% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distanceMatrix.R
\name{distanceMatrix}
\alias{distanceMatrix}
\title{Computes distance matrix among the samples of two multivariate time-series.}
\usage{
distanceMatrix <- function(
  sequences = NULL,
  grouping.column = NULL,
  time.column = NULL,
  method = "manhattan"
  )
}
\arguments{
\item{sequences}{dataframe with multiple sequences identified by a grouping column.}

\item{grouping.column}{character string, name of the column in \code{sequences} to be used to identify separates sequences within the file. This argument is ignored if \code{sequence.A} and \code{sequence.B} are provided.}

\item{method}{character string naming a distance metric. Valid entries are: "manhattan", "euclidean", "chi", and "hellinger". Invalid entries will throw an error.}

\item{time.colum}{character string, name of the column with time/depth/rank data. The data in this column is not modified.}

\item{exclude.columns}{character string or character vector with column names in \code{sequences}, or \code{squence.A} and \code{sequence.B} to be excluded from the analysis.}
}
\value{
A matrix with the distances among samples of both sequences if there are only two groups in \code{sequences} according to \code{grouping.column}. A list with named slots containing the the distance matrices of every possible combination of sequences according to \code{grouping.column}.
}
\description{
Computes a distance matrix among the samples of two or several multivariate time-series provided in a single dataframe, identified by a grouping column. Distances can be computed through the methods "manhattan", "euclidean", "chi", and "hellinger", and are implemented in the function \code{\link{distance}}. The function uses the packages \code{\link[parallel]{parallel}} and \code{\link[doParallel]{doParallel}} to compute distances matrices among different sequences in parallel.
}
\details{
Distances are computed as:
\itemize{
\item \code{manhattan}: \code{d <- sum(abs(x - y))}
\item \code{euclidean}: \code{d <- sqrt(sum((x - y)^2))}
\item \code{chi}: \code{
    xy <- x + y
    y. <- y / sum(y)
    x. <- x / sum(x)
    d <- sqrt(sum(((x. - y.)^2) / (xy / sum(xy))))}
\item \code{hellinger}: \code{d <- sqrt(1/2 * sum(sqrt(x) - sqrt(y))^2)}
}
Note that zeroes are replaced by 0.00001 whem \code{method} equals "chi" or "hellinger".
}
\examples{
#loading data
data(sequenceA)
data(sequenceB)

#preparing datasets
sequences <- prepareSequences(
 sequence.A = sequenceA,
 sequence.A.name = "A",
 sequence.B = sequenceB,
 sequence.B.name = "B",
 merge.mode = "complete",
 if.empty.cases = "zero",
 transformation = "hellinger"
 )

#computing distance matrix
D <- distanceMatrix(
 sequences = sequences,
 grouping.column = "id",
 method = "manhattan"
 )

#plot
image(D)

}
\seealso{
\code{\link{distance}}
}
\author{
Blas Benito <blasbenito@gmail.com>
}
