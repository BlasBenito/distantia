# Generated by roxygen2: do not edit by hand

export(arrange_by_similarity)
export(autoSum)
export(auto_distance_cpp)
export(auto_sum)
export(auto_sum_no_path_cpp)
export(auto_sum_path_cpp)
export(check_args)
export(check_args_distance)
export(check_args_x)
export(combination_path)
export(combine)
export(cost_matrix)
export(cost_matrix_cpp)
export(cost_matrix_diag_cpp)
export(cost_matrix_weighted_diag_cpp)
export(cost_path)
export(cost_path_cpp)
export(cost_path_diag_cpp)
export(cost_path_slotting_cpp)
export(cost_path_sum)
export(cost_path_sum_cpp)
export(cost_path_trim)
export(cost_path_trim_cpp)
export(distance)
export(distanceMatrix)
export(distancePairedSamples)
export(distance_canberra_cpp)
export(distance_chebyshev_cpp)
export(distance_chi)
export(distance_chi_cpp)
export(distance_cosine_cpp)
export(distance_euclidean)
export(distance_euclidean_cpp)
export(distance_hamming_cpp)
export(distance_hellinger)
export(distance_hellinger_cpp)
export(distance_jaccard_cpp)
export(distance_manhattan)
export(distance_manhattan_cpp)
export(distance_matrix)
export(distance_matrix_cpp)
export(distance_pairwise_cpp)
export(distance_russelrao_cpp)
export(distantia)
export(f_hellinger)
export(f_percentage)
export(f_proportion)
export(f_scale)
export(importance)
export(importance_cpp)
export(importance_paired_cpp)
export(importance_robust_cpp)
export(leastCostMatrix)
export(leastCostPath)
export(leastCostPathNoBlocks)
export(null_psi_cpp)
export(null_psi_paired_cpp)
export(permute_free_by_row_cpp)
export(permute_free_cpp)
export(permute_restricted_by_row_cpp)
export(permute_restricted_cpp)
export(plotMatrix)
export(prepare_ab)
export(prepare_column_names)
export(prepare_df)
export(prepare_df_list)
export(prepare_list_class)
export(prepare_matrix)
export(prepare_matrix_list)
export(prepare_na)
export(prepare_sequences)
export(prepare_time)
export(prepare_transformation)
export(prepare_vector_list)
export(psi)
export(psi_auto_sum_cpp)
export(psi_cost_path_cpp)
export(psi_cpp)
export(psi_formula_cpp)
export(psi_paired_cpp)
export(subset_matrix_by_rows_cpp)
export(update_path_dist_cpp)
export(workflowPartialMatch)
export(workflowSlotting)
export(workflowTransfer)
importFrom(Rcpp,evalCpp)
useDynLib(distantia, .registration = TRUE)
